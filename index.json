[{"content":"Introduction For those who might not be familiar, Giscus is an open-source, GitHub-powered comment system that allows you to embed GitHub discussions directly into your website.\nWhy Giscus? Let’s talk about why I chose Giscus for my blog. Traditional comment systems often come with privacy concerns and require maintaining separate user accounts. Giscus leverages GitHub’s infrastructure, which means it benefits from GitHub’s robust security, widespread use, and community engagement. Plus, it’s open-source, aligning with my values of transparency and community collaboration.\nImplementing Giscus Integrating Giscus into my blog was pretty simple. Here’s the code snippet I used, which was generated directly with giscus.app :\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \u0026lt;script src=\u0026#34;https://giscus.app/client.js\u0026#34; data-repo=\u0026#34;aefly/blog\u0026#34; data-repo-id=\u0026#34;R_kgDOL74QFg\u0026#34; data-category=\u0026#34;Announcements\u0026#34; data-category-id=\u0026#34;DIC_kwDOL74QFs4CfdDC\u0026#34; data-mapping=\u0026#34;title\u0026#34; data-strict=\u0026#34;0\u0026#34; data-reactions-enabled=\u0026#34;1\u0026#34; data-emit-metadata=\u0026#34;0\u0026#34; data-input-position=\u0026#34;bottom\u0026#34; data-theme=\u0026#34;dark_protanopia\u0026#34; data-lang=\u0026#34;en\u0026#34; data-loading=\u0026#34;lazy\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; async \u0026gt;\u0026lt;/script\u0026gt; Then, with this snippet, I just needed to add it to /layout/partials/comments.html.\nCustomizing Giscus One of the great things about Giscus is its flexibility. You can customize various aspects, such as themes, languages, and positioning, to match your blog’s style and requirements. The script’s attributes are easy to modify, making it simple to tweak settings as needed.\nTesting the Setup After adding the script to my blog, I tested it by navigating to this blog post and leaving a comment. If everything is working correctly, you should see the comment displayed below.\nConclusion Integrating Giscus into my blog has been great. It offers a modern, secure, and user-friendly way to manage comments using GitHub’s community. If you need a new comment system for your website, I highly recommend trying Giscus.\nFeel free to leave a comment below with the new Giscus system. I look forward to your thoughts and feedback!\n","permalink":"https://blog.aefly.gg/posts/testing-giscus-comments/","summary":"Introduction For those who might not be familiar, Giscus is an open-source, GitHub-powered comment system that allows you to embed GitHub discussions directly into your website.\nWhy Giscus? Let’s talk about why I chose Giscus for my blog. Traditional comment systems often come with privacy concerns and require maintaining separate user accounts. Giscus leverages GitHub’s infrastructure, which means it benefits from GitHub’s robust security, widespread use, and community engagement. Plus, it’s open-source, aligning with my values of transparency and community collaboration.","title":"Testing Giscus Comments"},{"content":"Introduction VSCode has become the go-to code editor for many developers due to its versatility, performance, and extensive ecosystem of plugins. However, setting up the perfect environment can sometimes feel overwhelming with the sheer number of options available. In this post, I\u0026rsquo;ll share my minimal VSCode setup, including configurations and essential plugins that enhance my workflow without overwhelming it.\nTheme Choosing a theme that is easy on the eyes and enhances readability is crucial. I use the CodeSandbox Theme with the \u0026ldquo;Legacy\u0026rdquo; color scheme. This theme offers a clean and visually appealing interface, making long coding sessions more comfortable.\nFont For the font, I prefer Cascadia Code by Microsoft, along with Caskaydia Nerd Font from NerdFont for terminal icons. This combination provides a clear and modern look with support for programming ligatures and icons.\nExtensions To maximize productivity and maintain a clutter-free workspace, I rely on a few key extensions. Here are my top picks:\nemojisense : Adds emoji suggestions to your autocomplete menu, making it easy to insert emojis into your code or comments. Better Comments : Helps you create more human-friendly comments in your code. This extension allows you to categorize comments using different colors, which makes your annotations more readable and organized. Discord Presence : Shows your coding activity on your Discord profile. It\u0026rsquo;s a fun way to let your friends and colleagues see what you\u0026rsquo;re working on in real-time. Material Icon Theme : Replaces the default file icons with material design icons. It enhances the visual appeal and makes it easier to identify different file types at a glance. Output Colorizer : Adds syntax highlighting to the VSCode Output Panel. It makes reading logs and debugging output much easier by adding color coding to different types of messages. Project Manager : Simplifies switching between projects. This extension allows you to save your workspace configurations and quickly switch between them, which is especially useful if you work on multiple projects simultaneously. Remote - SSH : Allows you to open a remote folder on any remote machine using SSH and take advantage of VSCode’s full feature set. This is invaluable for working on servers or remote environments. Conventional Commits : Assists you in writing conventional commits messages, which is essential for maintaining a consistent commit history and automating the release process. GitHub Actions : Provides an interface to view and manage GitHub Actions workflows directly from VSCode. This extension helps you monitor your CI/CD pipelines without leaving your editor. GitLens : Enhances the built-in Git capabilities of VSCode. It allows you to visualize code authorship, seamlessly navigate through your repository’s history, and much more. Live Preview : Provides a live preview of your web application. It\u0026rsquo;s particularly useful for front-end developers as it shows changes in real-time as you code. Markdown All in One : A comprehensive Markdown editing experience. This extension includes shortcuts, a preview pane, and many other features to streamline Markdown editing. Markdown Emoji : Adds emoji support to Markdown files, enabling you to easily include emojis in your documentation and notes. markdownlint : Ensures your Markdown files follow best practices. It highlights issues and provides fixes, which is great for maintaining consistent and clean documentation. Prettier : An opinionated code formatter that supports many languages. It enforces a consistent style by parsing your code and re-printing it with its own rules. Settings Here is my global settings.json, optimized for a clean and efficient coding experience:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 { \u0026#34;editor.acceptSuggestionOnCommitCharacter\u0026#34;: false, \u0026#34;editor.fontFamily\u0026#34;: \u0026#34;\u0026#39;CaskaydiaMono Nerd Font Mono\u0026#39;, Cascadia Code, Consolas, \u0026#39;Courier New\u0026#39;, monospace\u0026#34;, \u0026#34;editor.fontLigatures\u0026#34;: true, \u0026#34;editor.fontSize\u0026#34;: 13, \u0026#34;editor.linkedEditing\u0026#34;: true, \u0026#34;editor.lineHeight\u0026#34;: 22, \u0026#34;editor.minimap.enabled\u0026#34;: false, \u0026#34;editor.occurrencesHighlight\u0026#34;: \u0026#34;off\u0026#34;, \u0026#34;editor.renderWhitespace\u0026#34;: \u0026#34;trailing\u0026#34;, \u0026#34;editor.suggest.insertMode\u0026#34;: \u0026#34;replace\u0026#34;, \u0026#34;editor.guides.indentation\u0026#34;: false, \u0026#34;editor.cursorBlinking\u0026#34;: \u0026#34;smooth\u0026#34;, \u0026#34;editor.cursorSmoothCaretAnimation\u0026#34;: \u0026#34;on\u0026#34;, \u0026#34;editor.smoothScrolling\u0026#34;: true, \u0026#34;explorer.autoReveal\u0026#34;: false, \u0026#34;explorer.confirmDelete\u0026#34;: false, \u0026#34;explorer.confirmDragAndDrop\u0026#34;: false, \u0026#34;explorer.confirmPasteNative\u0026#34;: false, \u0026#34;files.autoSave\u0026#34;: \u0026#34;onWindowChange\u0026#34;, \u0026#34;git.autofetch\u0026#34;: true, \u0026#34;git.confirmSync\u0026#34;: false, \u0026#34;git.enableSmartCommit\u0026#34;: true, \u0026#34;git.ignoreRebaseWarning\u0026#34;: true, \u0026#34;gitlens.telemetry.enabled\u0026#34;: false, \u0026#34;gitlens.graph.minimap.enabled\u0026#34;: false, \u0026#34;json.schemaDownload.enable\u0026#34;: true, \u0026#34;workbench.editor.enablePreview\u0026#34;: false, \u0026#34;workbench.tree.indent\u0026#34;: 20, \u0026#34;workbench.tree.renderIndentGuides\u0026#34;: \u0026#34;always\u0026#34;, \u0026#34;workbench.layoutControl.enabled\u0026#34;: false, \u0026#34;terminal.integrated.smoothScrolling\u0026#34;: true, \u0026#34;editor.mouseWheelScrollSensitivity\u0026#34;: 1.3, \u0026#34;workbench.iconTheme\u0026#34;: \u0026#34;material-icon-theme\u0026#34;, \u0026#34;security.workspace.trust.untrustedFiles\u0026#34;: \u0026#34;open\u0026#34;, \u0026#34;window.titleBarStyle\u0026#34;: \u0026#34;custom\u0026#34;, \u0026#34;window.commandCenter\u0026#34;: false, \u0026#34;window.menuBarVisibility\u0026#34;: \u0026#34;compact\u0026#34;, \u0026#34;telemetry.telemetryLevel\u0026#34;: \u0026#34;off\u0026#34;, \u0026#34;discord.removeDetails\u0026#34;: true, \u0026#34;workbench.startupEditor\u0026#34;: \u0026#34;none\u0026#34;, \u0026#34;workbench.colorTheme\u0026#34;: \u0026#34;CodeSandbox Legacy\u0026#34;, \u0026#34;remote-explorer.foldersSortOrder\u0026#34;: \u0026#34;alphabetical\u0026#34; } Preview With the settings listed above, my VSCode environment looks like this:\nConclusion With this minimal VSCode setup, I strike a balance between functionality and simplicity. By customizing basic configurations and carefully selecting essential plugins, I create an environment tailored to my needs without overwhelming clutter. Remember, the key is to adapt these settings to your workflow and preferences.\nFeel free to share your own setups or any extensions you find indispensable in the comments below.\n","permalink":"https://blog.aefly.gg/posts/my-minimal-vscode-setup/","summary":"Introduction VSCode has become the go-to code editor for many developers due to its versatility, performance, and extensive ecosystem of plugins. However, setting up the perfect environment can sometimes feel overwhelming with the sheer number of options available. In this post, I\u0026rsquo;ll share my minimal VSCode setup, including configurations and essential plugins that enhance my workflow without overwhelming it.\nTheme Choosing a theme that is easy on the eyes and enhances readability is crucial.","title":"My Minimal VSCode Setup"},{"content":"Hello World! Welcome to my blog!\nI\u0026rsquo;m excited to kick off this journey of sharing my experiences, insights, and discoveries with all of you. Whether you\u0026rsquo;re a fellow tech enthusiast, a curious learner, or someone who stumbled upon this page by chance, I\u0026rsquo;m glad you\u0026rsquo;re here.\nWhy I\u0026rsquo;m Blogging? The main reason I\u0026rsquo;m starting this blog is to connect with people who share my passions. I love diving into new technologies, experimenting with projects, and figuring out the best ways to solve problems. Through this blog, I hope to:\nPersonal Reflections: Offers a heartfelt exploration of life\u0026rsquo;s journey, sharing candid insights and lessons learned along the way. Provide Tutorials: Step-by-step guides to help you through various tech-related tasks and projects. Conduct Tech Tests: Reviews and tests of the latest gadgets, software, and tools. Discuss Ideas: Whether it\u0026rsquo;s a new app concept or a revolutionary tech trend, I want to hear your thoughts too! Showcase Projects: Updates and insights into what I\u0026rsquo;m working on, with tips and tricks I pick up along the way. What Can You Expect? I\u0026rsquo;ll be posting a bit of everything. One day you might find a detailed tutorial on setting up a development environment, and the next, a discussion about the latest trends in artificial intelligence. My goal is to keep things diverse and engaging, ensuring there\u0026rsquo;s always something interesting to you to explore.\nHappy reading!\n","permalink":"https://blog.aefly.gg/posts/hello-world/","summary":"Hello World! Welcome to my blog!\nI\u0026rsquo;m excited to kick off this journey of sharing my experiences, insights, and discoveries with all of you. Whether you\u0026rsquo;re a fellow tech enthusiast, a curious learner, or someone who stumbled upon this page by chance, I\u0026rsquo;m glad you\u0026rsquo;re here.\nWhy I\u0026rsquo;m Blogging? The main reason I\u0026rsquo;m starting this blog is to connect with people who share my passions. I love diving into new technologies, experimenting with projects, and figuring out the best ways to solve problems.","title":"Hello, world"}]